// recibe una orden en @order
// Este limpio la lista al cambiar de orden
$('.provider_box').remove()
$('.column.order_info').removeClass('active')
cleanInfoTab()
$('.order_product_info_container').append('<ul class="order_product_info_list"></ul>')
$('.info_tab_button').remove()
$('.confirmation_button').remove()
$('.order_finish_button').remove()
$('img.order_finish_image').remove()
$('.loader').remove()

// mensaje si todavia no ha pasado la fecha limite
<% if !@order.due_date_past? %>
	$('ul.offer_list').append("<div class='order_warning_message'>Podrás ver las cotizaciones después de la fecha límite de cotización <br/> <%= j l @order.due_date.in_time_zone(current_user.time_zone), format: :cust %> </div>")
<% elsif !@order.combos.any? and !@order.offers.any? %> // mensaje si no le mandaron ofertas
	$('ul.offer_list').append("<div class='order_warning_message'>No recibiste ninguna cotizacion.  </div>")
<% end %>

$('.order_title_container').append('<%= j @order.title %>')
<% if @order.comment %>
	$('.order_comment_container').append('<div class="order_info_comment_header">Tu Mensaje:</div>')
	$('.order_comment_container').append('<%= j @order.comment.content %>')
	// telefono, email, direccion

<% end %>




<% if @order.due_date_past? %>
	$('#selection_header').append('<div class="loader hidden"><%= j t("loading...") %></div>')
	<% if @order.is_open? && @order.combos.any?%>
		$('#selection_header').append("<%= j image_tag('icons/icon-style-checkmark-gray.png', class: 'confirmation_button', alt: t('confirm_selection') )%>")
		$('.order_product_list').append("<%= j render partial: 'offer_selection_form.html.erb', locals: {f: @order}%>")
	<% else %>
		$('#selection_header').append("<%= j image_tag('icons/certificate.svg', class: 'order_finish_image', alt: t('confirm_selection') )%>")
		$('#selection_header').append("<%= j link_to 'Terminar', order_path(@order), method: :delete, data: { confirm: 'La orden será terminada y dirigida al historial. ¿Deseas terminar la orden?' }, class: 'order_finish_button', remote: true %>")
	<% end %>

	<% @providers.each do |provider| %>
		$('.orders .provider_list').append("<%= j render partial: 'provider_box.html.erb', locals: {provider: provider}%>")
	<% end %>

	// agrega combos
	<% @order.combos.each do |combo| %>
		$('.offer_list').append("<%= j render partial: 'offers/combo_box.html.erb', locals: {f: combo, function: 'order'}%>")
		$('.order_product_list').append("<%= j render partial: 'selected_combo_box.html.erb', locals: {f: combo}%>")										
	<% end %>
<% end %>

<% @order.order_products.each do |order_product| %>
	$('.order_product_info_list').append("<%= j render partial: 'tab_product_info.html.erb', locals: {f: order_product}%>") // actualizar el tab	
<% end %>
// Se pueda acceder al tab de informacion con un boton
$('#selection_header').append("<div class='info_tab_button'><%= j image_tag('icons/icon-info.png')%></div>")
$('.info_tab_close_button').append("<%= j image_tag('icons/icon-x.svg') %>")







// Los productos del provedor indicado se vuelvan visibles
$('.provider_box').on('click', function(e) {
	$('.selected_provider_box').removeClass('selected_provider_box')
	$(e.target).addClass('selected_provider_box')

	// hace invisible todas las ofertas y productos
	$('.offer_product_box.active').removeClass('active')
	$('.combo_box').removeClass('active')
	idToCheck = $(e.target).attr('data-attribute-user-id')
	// hace visible las ofertas y productos que tienen el user-id
	$('.offer_product_box[data-attribute-user-id=' + idToCheck + ']').addClass('active')
	$('.combo_box[data-attribute-user-id=' + idToCheck + ']').addClass('active')
})

$('.offer_detail_form input').on('click', function(e){
	$(e.target).closest('.offer_product_box').addClass('deletion_candidate')
})

$('.offer_selection_button').on('click', function(e) {
	target = $(e.target)
	target.addClass('active')
	target.attr('type', 'button').prop('disabled', true)
	idToCheck = target.attr('data-offer-id')
	prodID = target.attr('data-product-id')
	$('.offer_deselection_button[data-offer-id=' + idToCheck + ']').prop('disabled', false)
	$('.order_product_list input[data-offer-id=' + idToCheck + ']').trigger('click')
	$('.selected_offer_box[data-offer-id=' + idToCheck + ']').addClass('selected')
	prodSelUpdate(prodID, "select");
})

$('.offer_deselection_button').on('click', function(e) {
	target = $(e.target).closest('button')
	target.attr('type', 'button').prop('disabled', true)
	idToCheck = target.attr('data-offer-id')
	prodID = target.attr('data-product-id')	
	$('.offer_selection_button[data-offer-id=' + idToCheck + ']').prop('disabled', false).removeClass('active')
	$('.order_product_list input[data-offer-id=' + idToCheck + ']').trigger('click')
	$('.selected_offer_box[data-offer-id=' + idToCheck + ']').removeClass('selected')
	prodSelUpdate(prodID, "deselect");
})
// haz click en cualquier parte del combo y se selecciona
$('.order_index .combo_box').on('click', function(e) {
	if (!$(e.target).hasClass('combo_selection_button')) {
		comboId = $(e.target).closest('.combo_box').attr('data-combo-id')
		$('.combo_selection_button[data-combo-id=' + comboId +']').click();
	};
})

$('.combo_selection_button').on('click', function(e) {
	$(e.target).attr('type', 'button').prop('disabled', true).addClass('active')
	idToCheck = $(e.target).attr('data-combo-id')
	$('.combo_deselection_button[data-combo-id=' + idToCheck + ']').prop('disabled', false)
	$('.order_product_list input[data-combo-id=' + idToCheck + ']').trigger('click')
	$('.selected_combo_box[data-combo-id=' + idToCheck + ']').addClass('selected')
	comboSelUpdate(idToCheck, "select");
})

$('.combo_deselection_button').on('click', function(e) {
	target = $(e.target).closest('button')
	target.attr('type', 'button').prop('disabled', true)
	idToCheck = target.attr('data-combo-id')
	$('.combo_selection_button[data-combo-id=' + idToCheck + ']').prop('disabled', false).removeClass('active')
	$('.order_product_list input[data-combo-id=' + idToCheck + ']').trigger('click')
	$('.selected_combo_box[data-combo-id=' + idToCheck + ']').removeClass('selected')
	comboSelUpdate(idToCheck, "deselect");
})


$('.info_tab_button').on('click', function() {
	$('.column.order_info').addClass('active')
})

$('.info_tab_close_button').on('click', function() {
	$('.column.order_info').removeClass('active')
})



// tab de info debe actualizar la cantidad de productos seleccionados
function prodSelUpdate(prodId, mode) {
	offerQuantity = parseFloat($('.units[data-product-id=' + prodId + ']').text());
	infoTabProdChange(prodId, offerQuantity, mode); //debe de actualizar el string en tab de informacion

}

function comboSelUpdate(comboId, mode) {
	products = $('.combo_box[data-combo-id='+ comboId + '] .product_list_area').children()
	for(var i =0; i < products.length; i++) {
		productId = $(products[i]).attr('data-product-id');
		quantity = parseFloat($(products[i]).attr('data-product-units'));
		console.log("cantidad")
		console.log(quantity)
		infoTabProdChange(productId, quantity, mode)
	}
}

// recibe el cantidad, el modo y la identificacion de producto y actualiza el tab de informacion
function infoTabProdChange(prodId, offerQuantity, mode ) {
	productInfoArray = $('.product_quantity_container[data-product-id=' + prodId + ']').text().split("/");
	tabQuantity = parseFloat(productInfoArray[0]);
	objectiveQuantity = parseFloat(productInfoArray[1]);

	if (mode == "select") {
		newQuantity = tabQuantity + offerQuantity;
	} else if (mode == "deselect") {
		newQuantity = tabQuantity - offerQuantity;
	};
	newString = newQuantity.toString() + "/" + objectiveQuantity
	console.log(newQuantity.toString() + "/" + objectiveQuantity)
	target = $('.product_quantity_container[data-product-id=' + prodId + ']');
	target.text(newString);
	target.closest('.product_main_info').toggleClass('changed')

}


// Revela/esconde el comentrio de cada producto en into tabQuantity
$('.product_main_info').on('click', function(e) {
	if ($(e.target).hasClass('active')) {
		$(e.target).removeClass('active')
		$(e.target).siblings('.product_comment_container').removeClass('active')		
	} else {
		$(e.target).addClass('active')
		$(e.target).siblings('.product_comment_container').addClass('active')	
	}
})

// confirmation button es una imagen que actua como boton proxy para el submit
$('.confirmation_button').on('click', function() {
	$('#order_form_submit').click();
	$('img.confirmation_button').addClass('hidden')
	$('.loader').removeClass('hidden')
})


// order_finish_image es una imagen que actua como boton proxy para el submit
$('.order_finish_image').on('click', function() {
	$('.order_finish_button')[0].click();
})

// intercambia el spinner

$('.order_finish_button').on('click', function(e) {
	$('img.order_finish_image').addClass('hidden')
	$('.loader').removeClass('hidden')
})

// limpia la columna de informacion
function cleanInfoTab() {
	$('.info_tab_close_button').empty()
	$('.order_title_container').empty()
	$('.order_product_info_container').empty()
	$('.order_comment_container').empty()
	$('.order_date_container').empty()
}





$('.loading_animation').removeClass('active')
